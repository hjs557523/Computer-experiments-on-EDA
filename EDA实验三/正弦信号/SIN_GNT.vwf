/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLKOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("COUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("RST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("altera_reserved_tdo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("AR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("AR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77007.316;
		LEVEL 1 FOR 22992.684;
	}
}

TRANSITION_LIST("AR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45007.0;
		LEVEL 1 FOR 31999.841;
		LEVEL 0 FOR 22993.159;
	}
}

TRANSITION_LIST("AR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29009.435;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 15999.873;
			LEVEL 0 FOR 16000.127;
		}
		LEVEL 1 FOR 6990.565;
	}
}

TRANSITION_LIST("AR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21006.596;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 7999.915;
			LEVEL 0 FOR 8000.085;
		}
		LEVEL 1 FOR 7999.915;
		LEVEL 0 FOR 6993.489;
	}
}

TRANSITION_LIST("AR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17008.978;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 3999.635;
			LEVEL 0 FOR 4000.365;
		}
		LEVEL 1 FOR 2991.022;
	}
}

TRANSITION_LIST("AR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9007.625;
		LEVEL 1 FOR 1239.839;
		LEVEL 0 FOR 4760.161;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 1999.822;
			LEVEL 0 FOR 2000.178;
		}
		LEVEL 1 FOR 992.375;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("CLKOUT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1005.465;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 1000.223;
			LEVEL 0 FOR 999.777;
		}
		LEVEL 1 FOR 994.535;
	}
}

TRANSITION_LIST("COUT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("EN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7680.0;
		LEVEL 1 FOR 92320.0;
	}
}

TRANSITION_LIST("Q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1011.05;
		LEVEL 1 FOR 98988.95;
	}
}

TRANSITION_LIST("Q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37011.19;
		LEVEL 1 FOR 62988.81;
	}
}

TRANSITION_LIST("Q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 27010.168;
		LEVEL 1 FOR 9999.82;
		LEVEL 0 FOR 14000.18;
		LEVEL 1 FOR 48989.832;
	}
}

TRANSITION_LIST("Q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21010.195;
		LEVEL 1 FOR 5999.841;
		LEVEL 0 FOR 4000.159;
		LEVEL 1 FOR 5999.841;
		LEVEL 0 FOR 6000.159;
		LEVEL 1 FOR 7999.841;
		LEVEL 0 FOR 8000.159;
		LEVEL 1 FOR 40989.805;
	}
}

TRANSITION_LIST("Q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19011.326;
		LEVEL 1 FOR 1999.692;
		LEVEL 0 FOR 2000.308;
		LEVEL 1 FOR 3999.692;
		LEVEL 0 FOR 2000.308;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1999.692;
			LEVEL 0 FOR 4000.308;
		}
		LEVEL 1 FOR 3999.692;
		LEVEL 0 FOR 4000.308;
		LEVEL 1 FOR 3999.692;
		LEVEL 0 FOR 6000.308;
		LEVEL 1 FOR 29999.692;
		LEVEL 0 FOR 4988.982;
	}
}

TRANSITION_LIST("Q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17010.586;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 3999.764;
			LEVEL 0 FOR 4000.236;
		}
		LEVEL 1 FOR 3999.764;
		LEVEL 0 FOR 2000.236;
		LEVEL 1 FOR 1999.764;
		LEVEL 0 FOR 4000.236;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1999.764;
			LEVEL 0 FOR 2000.236;
		}
		LEVEL 1 FOR 1999.764;
		LEVEL 0 FOR 4000.236;
		LEVEL 1 FOR 1999.764;
		LEVEL 0 FOR 6000.236;
		LEVEL 1 FOR 17999.764;
		LEVEL 0 FOR 6000.236;
		LEVEL 1 FOR 1999.764;
		LEVEL 0 FOR 2989.65;
	}
}

TRANSITION_LIST("Q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17011.618;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 1999.663;
			LEVEL 0 FOR 2000.337;
		}
		LEVEL 1 FOR 1999.663;
		LEVEL 0 FOR 4000.337;
		LEVEL 1 FOR 3999.663;
		LEVEL 0 FOR 4000.337;
		LEVEL 1 FOR 9999.663;
		LEVEL 0 FOR 4000.337;
		LEVEL 1 FOR 1999.663;
		LEVEL 0 FOR 4000.337;
		LEVEL 1 FOR 3999.663;
		LEVEL 0 FOR 2000.337;
		LEVEL 1 FOR 13999.663;
		LEVEL 0 FOR 2000.337;
		LEVEL 1 FOR 3999.663;
		LEVEL 0 FOR 4000.337;
		LEVEL 1 FOR 1999.663;
		LEVEL 0 FOR 988.719;
	}
}

TRANSITION_LIST("Q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 27009.921;
		LEVEL 1 FOR 1999.888;
		LEVEL 0 FOR 8000.112;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1999.888;
			LEVEL 0 FOR 2000.112;
		}
		LEVEL 1 FOR 1999.888;
		LEVEL 0 FOR 10000.112;
		LEVEL 1 FOR 1999.888;
		LEVEL 0 FOR 2000.112;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 3999.888;
			LEVEL 0 FOR 4000.112;
		}
		LEVEL 1 FOR 5999.888;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4000.112;
			LEVEL 1 FOR 3999.888;
		}
		LEVEL 0 FOR 990.191;
	}
}

TRANSITION_LIST("RST")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 3760.0;
		LEVEL 1 FOR 86000.0;
	}
}

TRANSITION_LIST("altera_reserved_tdo")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 100000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "AR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "AR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "AR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "AR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "AR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "AR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "AR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "Q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "CLKOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "COUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "altera_reserved_tdo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 27900;
	MASTER = TRUE;
}
;
